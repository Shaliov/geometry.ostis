agent_of_checking_key_sc_element_of_semantic_neighborhoods
=> nrel_main_idtf:
	[агентная scp-программа проверки наличия ключевого sc-элемента у указанной семантической окрестности] (* <- lang_ru;; *);
	[agent scp-program of checking key sc-element of semantic neighborhoods] (* <- lang_en;; *);
	<- agent_scp_program;;

scp_program -> agent_of_checking_key_sc_element_of_semantic_neighborhoods 
	(*
	-> rrel_params: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_params 
		(*
		-> rrel_1: rrel_in: _event;;
		-> rrel_2: rrel_in: _input_arc;;
		*);;

	-> rrel_operators: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator_set 
		(*
		-> rrel_init: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator1A 
			(*
			<- searchElStr3;;

			-> rrel_1: rrel_assign: rrel_scp_var: _temp;;
			-> rrel_2: rrel_fixed: rrel_scp_var: _input_arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _quest;;

			=> nrel_goto: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator1B;;
			*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator1B 
			(*
		  	<- searchElStr3;;

		  	-> rrel_1: rrel_fixed: rrel_scp_const: action_of_checking_key_sc_element_of_semantic_neighborhoods;;
		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
		  	-> rrel_3: rrel_fixed: rrel_scp_var: _quest;;

		  	=> nrel_then: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator1C;;
		  	=> nrel_else: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator_return;;
			*);;
		
		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator1C
			(*
		  	<- searchElStr3;;

		  	-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
		  	-> rrel_3: rrel_assign: rrel_scp_var: rrel_struct: _structure;;

		  	=> nrel_then: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator0A;;
		  	=> nrel_else: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_call_proc_of_adding_validating_message;;
			*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator0A
        		(*
		 	<- genEl;;

		 	-> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _set_of_semantic;;

		 	=> nrel_goto: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator0B;;
		 	*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator0B
        		(*
		 	<- genEl;;

		 	-> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_struct: rrel_scp_var: _struct_of_semantic;;

		 	=> nrel_goto: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator1D;;
		 	*);;


		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator1D
			(*
		  	<- searchSetStr3;;

		  	-> rrel_1: rrel_fixed: rrel_scp_var: _structure;;
		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
		  	-> rrel_3: rrel_assign: rrel_scp_var: rrel_node: _element;;

		  	-> rrel_set_3: rrel_assign: rrel_scp_var: _set_of_elements_of_structure;;

		  	=> nrel_then: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator1E1;;
		  	=> nrel_else: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_call_proc_of_adding_validating_message1;;
			*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator1E1
			(*
		  	<- searchElStr3;;

		  	-> rrel_1: rrel_fixed: rrel_scp_var: _set_of_elements_of_structure;;
		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
		  	-> rrel_3: rrel_assign: rrel_scp_var: rrel_node: _element;;

		  	=> nrel_then: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator1E2;;
		  	=> nrel_else: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator0C;;
			*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator1E2
			(*
			<- eraseEl;;

			-> rrel_1: rrel_fixed: rrel_scp_var: rrel_pos_const_perm: rrel_erase: _arc1;;

			=> nrel_goto: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator1E3;;
			*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator1E3
			(*
		  	<- searchElStr3;;

		  	-> rrel_1: rrel_fixed: rrel_scp_const: semantic_neighbourhood;;
		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: rrel_const: _arc1;;
		  	-> rrel_3: rrel_fixed: rrel_scp_var: _element;;

		  	=> nrel_then: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator1E4;;
		  	=> nrel_else: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator1E1;;
			*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator1E4
        		(*
		 	<- genElStr3;;

		 	-> rrel_1: rrel_fixed: rrel_scp_var: _set_of_semantic;;
		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
		  	-> rrel_3: rrel_fixed: rrel_scp_var: _element;;

		 	=> nrel_goto: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator1E1;;
		 	*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator0C
        		(*
		 	<- genEl;;

		 	-> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _answer_of_checking_key_sc_element_of_semantic_neighborhoods;;

		 	=> nrel_goto: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator1F1;;
		 	*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator1F1
			(*
		  	<- searchElStr3;;

		  	-> rrel_1: rrel_fixed: rrel_scp_var: _set_of_semantic;;
		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
		  	-> rrel_3: rrel_assign: rrel_scp_var: _some_semantic;;

		  	=> nrel_then: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator1F2;;
		  	=> nrel_else: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator2A;;
			*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator1F2
			(*
			<- eraseEl;;

			-> rrel_1: rrel_fixed: rrel_scp_var: rrel_pos_const_perm: rrel_erase: _arc1;;

			=> nrel_goto: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator1F3;;
			*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator1F3
			(*
		  	<- searchElStr5;;

		  	-> rrel_1: rrel_fixed: rrel_scp_var: _some_semantic;;
		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: rrel_const: _arc1;;
		  	-> rrel_3: rrel_assign: rrel_scp_var: _key_element;;
		  	-> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: rrel_const: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: rrel_key_sc_element;;

		  	=> nrel_then: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator1F1;;
		  	=> nrel_else: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator1F4;;
			*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator1F4
			(*
		  	<- genElStr3;;

		  	-> rrel_1: rrel_fixed: rrel_scp_var: _struct_of_semantic;;
		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: rrel_const: _arc2;;
		  	-> rrel_3: rrel_fixed: rrel_scp_var: _some_semantic;;

		  	=> nrel_goto: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator1F5;;
			*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator1F5
			(*
		  	<- searchSetStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _struct_of_semantic;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _some_semantic;;

			-> rrel_set_2: rrel_fixed: rrel_scp_var: _answer_of_checking_key_sc_element_of_semantic_neighborhoods;;

		  	=> nrel_goto: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator1F6;;
			*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator1F6
			(*
		  	<- genElStr3;;

		  	-> rrel_1: rrel_fixed: rrel_scp_var: _answer_of_checking_key_sc_element_of_semantic_neighborhoods;;
		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: rrel_const: _arc1;;
		  	-> rrel_3: rrel_fixed: rrel_scp_var: _some_semantic;;

		  	=> nrel_goto: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator1F1;;
			*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator2A
			(*
		  	<- genElStr3;;

		  	-> rrel_1: rrel_fixed: rrel_scp_var: _answer_of_checking_key_sc_element_of_semantic_neighborhoods;;
		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: rrel_const: _arc1;;
		  	-> rrel_3: rrel_fixed: rrel_scp_const: struct_semantic_neighbourhood_without_key_elements;;

		  	=> nrel_goto: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator2A1;;
			*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator2A1
			(*
		  	<- genElStr3;;

		  	-> rrel_1: rrel_fixed: rrel_scp_const: struct_semantic_neighbourhood_without_key_elements;;
		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: rrel_const: _arc1;;
		  	-> rrel_3: rrel_fixed: rrel_scp_var: _struct_of_semantic;;

		  	=> nrel_goto: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator2A2;;
			*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator2A2
			(*
		  	<- searchSetStr3;;

		  	-> rrel_1: rrel_fixed: rrel_scp_const: struct_semantic_neighbourhood_without_key_elements;;
		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: rrel_const: _arc1;;
		  	-> rrel_3: rrel_fixed: rrel_scp_var: _struct_of_semantic;;

		  	-> rrel_set_2: rrel_fixed: rrel_scp_var: _answer_of_checking_key_sc_element_of_semantic_neighborhoods;;

		  	=> nrel_goto: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator2A3;;
			*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator2A3
			(*
		  	<- genElStr3;;

		  	-> rrel_1: rrel_fixed: rrel_scp_var: _answer_of_checking_key_sc_element_of_semantic_neighborhoods;;
		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: rrel_const: _arc1;;
		  	-> rrel_3: rrel_fixed: rrel_scp_var: _struct_of_semantic;;

		  	=> nrel_goto: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator2B;;
			*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator2B
			(*
		  	<- searchSetStr3;;

		  	-> rrel_1: rrel_fixed: rrel_scp_var: _answer_of_checking_key_sc_element_of_semantic_neighborhoods;;
		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: rrel_const: _arc1;;
		  	-> rrel_3: rrel_fixed: rrel_scp_var: _struct_of_semantic;;

			-> rrel_set_2: rrel_fixed: rrel_scp_var: _answer_of_checking_key_sc_element_of_semantic_neighborhoods;;

		  	=> nrel_goto: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator2C;;
			*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator2C
			(*
			<- genElStr5;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_const: rrel_common: _arc1;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _struct_of_semantic;;
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_const: rrel_pos_const_perm: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: nrel_result;;	

			=> nrel_goto: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator2D;;
			*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator2D
			(*
			<- searchSetStr5;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_const: rrel_common: _arc1;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _struct_of_semantic;;
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_const: rrel_pos_const_perm: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: nrel_result;;	

			-> rrel_set_2: rrel_fixed: rrel_scp_var: _answer_of_checking_key_sc_element_of_semantic_neighborhoods;;
			-> rrel_set_4: rrel_fixed: rrel_scp_var: _answer_of_checking_key_sc_element_of_semantic_neighborhoods;;

			=> nrel_goto: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator2E;;
			*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator2E
			(*
			<- genElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _answer_of_checking_key_sc_element_of_semantic_neighborhoods;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_const: rrel_pos_const_perm: _arc1;;
			-> rrel_3: rrel_fixed: rrel_scp_const: nrel_result;;	

			=> nrel_goto: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator2F;;
			*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator2F
			(*
			<- genElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _answer_of_checking_key_sc_element_of_semantic_neighborhoods;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_const: rrel_pos_const_perm: _arc1;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _quest;;	

			=> nrel_goto: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator2H;;
			*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator2H
			(*
			<- genElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _answer_of_checking_key_sc_element_of_semantic_neighborhoods;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_const: rrel_pos_const_perm: _arc1;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _structure;;	

			=> nrel_goto: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator2L;;
			*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator2L
			(*
		  	<- searchSetStr3;;

		  	-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: rrel_const: _arc1;;
		  	-> rrel_3: rrel_fixed: rrel_scp_var: _structure;;

			-> rrel_set_2: rrel_fixed: rrel_scp_var: _answer_of_checking_key_sc_element_of_semantic_neighborhoods;;

		  	=> nrel_goto: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator3A;;
			*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator3A
			(*
			<- eraseEl;;

			-> rrel_1: rrel_erase: rrel_fixed: rrel_scp_var: _set_of_semantic;;

			=> nrel_goto: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator3B;;
			*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator3B
			(*
			<- eraseEl;;

			-> rrel_1: rrel_erase: rrel_fixed: rrel_scp_var: _set_of_elements_of_structure;;

			=> nrel_goto: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator2M;;
			*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator2M
			(*
			<- genElStr5;;

		 	-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
			-> rrel_2: rrel_assign: rrel_common: rrel_scp_var: rrel_const: _arc1;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _answer_of_checking_key_sc_element_of_semantic_neighborhoods;;
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: rrel_const: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: nrel_answer;;
		  	
		  	=> nrel_goto: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator_return;;	
		  	*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_call_proc_of_adding_validating_message 
			(*
		  	<- call;;

		  	-> rrel_1: rrel_fixed: rrel_scp_const: proc_of_adding_validating_message;;
		  	-> rrel_2: rrel_fixed: rrel_scp_const: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_call_proc_of_adding_validating_message_params 
				(*
				-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
				-> rrel_2: rrel_fixed: rrel_scp_const: [Wrong first parameter! We have not a struct];;
				*);;
		  	-> rrel_3: rrel_assign: rrel_scp_var: _descr1;;

		  	=> nrel_goto: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_call_proc_of_adding_validating_message_waitreturn_proc_of_adding_validating_message;;
			*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_call_proc_of_adding_validating_message_waitreturn_proc_of_adding_validating_message
			(*
		  	<- waitReturn;;

		  	-> rrel_1: rrel_fixed: rrel_scp_var: _descr1;;

		  	=> nrel_goto: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_return;;
			*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_call_proc_of_adding_validating_message1
			(*
		  	<- call;;

		  	-> rrel_1: rrel_fixed: rrel_scp_const: proc_of_adding_validating_message;;
		  	-> rrel_2: rrel_fixed: rrel_scp_const: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_call_proc_of_adding_validating_message1_params 
				(*
				-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
				-> rrel_2: rrel_fixed: rrel_scp_const: [There are no problems];;
				*);;
		  	-> rrel_3: rrel_assign: rrel_scp_var: _descr11;;

		  	=> nrel_goto: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_call_proc_of_adding_validating_message_waitreturn_proc_of_adding_validating_message1;;
			*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_call_proc_of_adding_validating_message_waitreturn_proc_of_adding_validating_message1
			(*
		  	<- waitReturn;;

		  	-> rrel_1: rrel_fixed: rrel_scp_var: _descr11;;

		  	=> nrel_goto: .agent_of_checking_key_sc_element_of_semantic_neighborhoods_return;;
			*);;

		-> .agent_of_checking_key_sc_element_of_semantic_neighborhoods_operator_return 
			(*
		  	<- return;;
			*);;
		*);;
	*);;
